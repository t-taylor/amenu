#!/bin/zsh
#
# Fuzzy Finder Dynamic GUI Menu
#
# Dependencies: fzf & tail

#---------------------------------------
#               Config
#---------------------------------------

TERMINAL=st

FLAG_CLASS=-c #st

FLAG_GEOMETRY=-g #st

WIDTH=50
HEIGHT=25
OFFSET_X=450
OFFSET_Y=200

export FZF_DEFAULT_OPTS="\
   --cycle
   --print-query
   --no-multi
   --reverse --border bottom --no-info --no-color --header '' --margin 0%,0%
   --bind \;:accept
   --bind esc:cancel
   --bind tab:down
   --bind btab:up
   "

#---------------------------------------
#               Script
#---------------------------------------

FILE_ARGS=/tmp/AMENU_FILE_ARGS
FILE_CHOICES=/tmp/AMENU_FILE_CHOICES

scan_args() {
   while IFS= read -r line; do echo "$line"; done
   [ -n "$line" ] && echo "$line"
}
show() { while IFS= read -r line; do echo "$line"; done < $FILE_CHOICES; }
run_menu() {
   scan_args > $FILE_ARGS
   prompt
   show
}
prompt() {
   GEOMETRY=$WIDTH"x"$HEIGHT+$OFFSET_X+$OFFSET_Y

   : > $FILE_CHOICES
   $TERMINAL \
      $FLAG_CLASS amenu \
      $FLAG_GEOMETRY $GEOMETRY \
      -e "$SHELL" -c "fzf $PROMPT < $FILE_ARGS | tail -1 > $FILE_CHOICES" 2> /dev/null
         [ -s "$FILE_CHOICES" ] || exit 1
      }
   runner() {
      echo ${(k)commands} | sed -e 's/ /\n/g' | run_menu | sh
   }
clippass() {
   prefix=${PASSWORD_STORE_DIR-~/.password-store}
   password_files=( "$prefix"/**/*.gpg )
   password_files=( "${password_files[@]#"$prefix"/}" )
   password_files=( "${password_files[@]%.gpg}" )
   password=$(printf '%s\n' "${password_files[@]}" | run_menu)
   [[ -n $password ]] || exit
   pass show -c "$password" 2>/dev/null
}
main() {
   case $1 in
      -r) runner ;;
      -p) clippass ;;
      *) run_menu ;;
   esac
}
main "$@"
